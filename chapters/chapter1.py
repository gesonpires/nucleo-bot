from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from chapters.chapter2 import chapter2

async def chapter1(update: Update, context: CallbackContext) -> None:
    chat_id = update.effective_chat.id
    seq = context.user_data.get('seq1', 'start')

    # 1. INTRODU√á√ÉO ------------------------------------------------------
    if seq == 'start':
        await context.bot.send_message(
            chat_id,
            "√ìtimo trabalho com o Universo primordial! "
            "Agora precisamos acender a primeira estrela semelhante ao Sol."
        )
        await context.bot.send_message(
            chat_id,
            "Para iniciar a *cadeia pp*, o n√∫cleo estelar deve chegar a ‚âà 15 milh√µes de Kelvin."
        )

        keyboard = [
            [InlineKeyboardButton("A) Comprimir n√∫cleo muito r√°pido",      callback_data='ch1_a')],
            [InlineKeyboardButton("B) Deixar contrair naturalmente",       callback_data='ch1_b')],
            [InlineKeyboardButton("C) Injetar mat√©ria escura exot√©rmica",  callback_data='ch1_c')],
        ]
        await context.bot.send_message(
            chat_id,
            "Qual estrat√©gia escolher?",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        context.user_data['seq1'] = 'decision'

    # 2. DECIS√ÉO ---------------------------------------------------------
    elif seq == 'decision':
        choice = update.callback_query.data

        if choice == 'ch1_b':          # ‚úÖ resposta correta
            await update.callback_query.answer()
            await update.callback_query.edit_message_text(
                "üü¢ Perfeito! Temperatura ‚âà 15 MK liga a fus√£o p + p ‚Üí ¬≤H + e‚Å∫ + ŒΩ‚Çë."
            )

            qkeyboard = [
                [InlineKeyboardButton("1) F√≥ton",    callback_data='ch1_q_photon')],
                [InlineKeyboardButton("2) Neutrino", callback_data='ch1_q_neutrino')],
                [InlineKeyboardButton("3) N√™utron",  callback_data='ch1_q_neutron')],
            ]
            await context.bot.send_message(
                chat_id,
                "Mini-quiz: Qual part√≠cula escapa quase sem interagir e revela que a fus√£o ocorreu?",
                reply_markup=InlineKeyboardMarkup(qkeyboard)
            )
            context.user_data['seq1'] = 'quiz'

        # ------------- trecho dentro de elif seq == 'decision' -------------
        else:                          # ‚ùå respostas A ou C
            await update.callback_query.answer()
            msg = (
                "üî¥ Compress√£o extrema: temperatura sobe demais; a estrela se desestabiliza."
                if choice == "ch1_a"
                else "üî¥ Mat√©ria escura? Hip√≥tese interessante, mas sem efeito pr√°tico nesta fase."
            )
            await update.callback_query.edit_message_text(msg)

            # reenviar as op√ß√µes para nova tentativa
            keyboard = [
                [InlineKeyboardButton("A) Comprimir n√∫cleo muito r√°pido",     callback_data="ch1_a")],
                [InlineKeyboardButton("B) Deixar contrair naturalmente",      callback_data="ch1_b")],
                [InlineKeyboardButton("C) Injetar mat√©ria escura exot√©rmica", callback_data="ch1_c")],
            ]
            await context.bot.send_message(
                chat_id,
                "Tente outra estrat√©gia:",
                reply_markup=InlineKeyboardMarkup(keyboard)
            )

            context.user_data["seq1"] = "decision"   # continua aguardando clique

    # 3. QUIZ ------------------------------------------------------------
    elif seq == 'quiz':
        ans = update.callback_query.data
        if ans == 'ch1_q_neutrino':
            await update.callback_query.answer()
            await update.callback_query.edit_message_text(
                "‚úÖ Neutrino! Detectores na Terra captam milh√µes vindos do Sol a cada segundo."
            )
            
            # Bot√£o Avan√ßar
            next_kb = [[InlineKeyboardButton("‚û°Ô∏è Avan√ßar para Cap√≠tulo 2", callback_data="go_ch2")]]
            await context.bot.send_message(
                chat_id,
                "Pronto para a pr√≥xima fase da evolu√ß√£o estelar?",
                reply_markup=InlineKeyboardMarkup(next_kb),
            )
                        
            context.user_data['seq1'] = "await_ch2"
            
        else:
            await update.callback_query.answer()
            await update.callback_query.edit_message_text(
                "‚ùå N√£o exatamente. Tente de novo: qual part√≠cula quase n√£o interage?"
            )
            
            qkeyboard = [
                [InlineKeyboardButton("1) F√≥ton",    callback_data='ch1_q_photon')],
                [InlineKeyboardButton("2) Neutrino", callback_data='ch1_q_neutrino')],
                [InlineKeyboardButton("3) N√™utron",  callback_data='ch1_q_neutron')],
            ]
            await context.bot.send_message(
                chat_id,
                "Escolha novamente:",
                reply_markup=InlineKeyboardMarkup(qkeyboard)
            )
    # continua em 'quiz'
            
            # permanece em seq 'quiz'
    elif seq == "await_ch2":
        if update.callback_query.data == "go_ch2":
            await update.callback_query.answer()
            context.user_data["seq1"] = "done"     # encerra cap√≠tulo 1

            # INICIALIZAR Pr√≥ximo Cap√≠tulo (ramo solar por padr√£o)
            context.user_data["seq2"] = "start"
            await chapter2(update, context)