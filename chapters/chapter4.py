# chapters/chapter4.py
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ UTILIT√ÅRIOS ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
async def _send_image(bot, chat_id, path):
    try:
        with open(path, "rb") as f:
            await bot.send_photo(chat_id, f)
    except FileNotFoundError:
        await bot.send_message(chat_id, "(Imagem n√£o encontrada)")

def _set_seq(user_data, key, value):
    user_data[key] = value

def _get_seq(user_data, key, default="start"):
    return user_data.get(key, default)

# importa o pr√≥ximo cap√≠tulo
from chapters.chapter5 import chapter5

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ CAP√çTULO 4A ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
async def chapter4A(update: Update, context: CallbackContext) -> None:
    chat_id = update.effective_chat.id
    seq     = _get_seq(context.user_data, "4A")

    # 4A.1 ‚Äì introdu√ß√£o
    if seq == "start":
        await context.bot.send_message(
            chat_id,
            "Pulsos t√©rmicos expulsam as camadas externas da estrela. "
            "Um anel incandescente forma uma bel√≠ssima ‚Äúnebulosa planet√°ria‚Äù."
        )
        await _send_image(context.bot, chat_id, "assets/Planetary_Nebula.png")
        kb = [
            [InlineKeyboardButton("A) Impulsionar vento muito forte", callback_data="ch4a_a")],
            [InlineKeyboardButton("B) Manter pulso natural",          callback_data="ch4a_b")],
            [InlineKeyboardButton("C) Reduzir vento",                 callback_data="ch4a_c")],
        ]
        await context.bot.send_message(
            chat_id, "Como controlar a eje√ß√£o de massa?",
            reply_markup=InlineKeyboardMarkup(kb)
        )
        _set_seq(context.user_data, "4A", "decision")

    # 4A.2 ‚Äì decis√£o
    elif seq == "decision":
        choice = update.callback_query.data
        await update.callback_query.answer()

        if choice == "ch4a_b":
            await update.callback_query.edit_message_text(
                "üü¢ Pulso equilibrado! As camadas ricas em elementos s-process brilham, "
                "enquanto o n√∫cleo vira uma an√£ branca."
            )
            quiz_kb = [
                [InlineKeyboardButton("1) An√£ branca",       callback_data="ch4a_q_wd")],
                [InlineKeyboardButton("2) Estrela de n√™utrons", callback_data="ch4a_q_ns")],
                [InlineKeyboardButton("3) Buraco negro",     callback_data="ch4a_q_bh")],
            ]
            await context.bot.send_message(
                chat_id,
                "Mini-quiz: O objeto compacto que fica no centro da nebulosa √©‚Ä¶",
                reply_markup=InlineKeyboardMarkup(quiz_kb)
            )
            _set_seq(context.user_data, "4A", "quiz")
        else:
            msg = (
                "üî¥ Vento forte demais: o g√°s escapa r√°pido, a nebulosa fica difusa."
                if choice == "ch4a_a"
                else "üî¥ Vento fraco: as camadas n√£o saem e a nebulosa n√£o se forma."
            )
            await update.callback_query.edit_message_text(msg)
            retry_kb = [
                [InlineKeyboardButton("A) Impulsionar vento muito forte", callback_data="ch4a_a")],
                [InlineKeyboardButton("B) Manter pulso natural",           callback_data="ch4a_b")],
                [InlineKeyboardButton("C) Reduzir vento",                  callback_data="ch4a_c")],
            ]
            await context.bot.send_message(
                chat_id,
                "Tente novamente:",
                reply_markup=InlineKeyboardMarkup(retry_kb)
            )
            _set_seq(context.user_data, "4A", "decision")

    # 4A.3 ‚Äì quiz
    elif seq == "quiz":
        ans = update.callback_query.data
        await update.callback_query.answer()

        if ans == "ch4a_q_wd":
            await update.callback_query.edit_message_text(
                "‚úÖ Correto! Uma an√£ branca de carbono-oxig√™nio brilha no centro. üåü"
            )
            # bot√£o Avan√ßar para Cap√≠tulo 5
            next_kb = [[
                InlineKeyboardButton("‚û°Ô∏è Avan√ßar para Cap√≠tulo 5", callback_data="go_ch5")
            ]]
            await context.bot.send_message(
                chat_id,
                "Pronto para o cap√≠tulo final?",
                reply_markup=InlineKeyboardMarkup(next_kb)
            )
            _set_seq(context.user_data, "4A", "await_ch5")
        else:
            await update.callback_query.edit_message_text("‚ùå Tente novamente.")
            quiz_kb = [
                [InlineKeyboardButton("1) An√£ branca",       callback_data="ch4a_q_wd")],
                [InlineKeyboardButton("2) Estrela de n√™utrons", callback_data="ch4a_q_ns")],
                [InlineKeyboardButton("3) Buraco negro",     callback_data="ch4a_q_bh")],
            ]
            await context.bot.send_message(
                chat_id,
                "Mini-quiz: O objeto compacto √©‚Ä¶",
                reply_markup=InlineKeyboardMarkup(quiz_kb)
            )
            _set_seq(context.user_data, "4A", "quiz")

    # 4A.4 ‚Äì avan√ßar para Cap√≠tulo 5
    elif seq == "await_ch5" and update.callback_query.data == "go_ch5":
        await update.callback_query.answer()
        _set_seq(context.user_data, "4A", "done")
        context.user_data["seq5"] = "start"
        await chapter5(update, context)


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ CAP√çTULO 4B ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
async def chapter4B(update: Update, context: CallbackContext) -> None:
    chat_id = update.effective_chat.id
    seq     = _get_seq(context.user_data, "4B")

    # 4B.1 ‚Äì introdu√ß√£o
    if seq == "start":
        await context.bot.send_message(
            chat_id,
            "O n√∫cleo de ferro colapsa at√© densidade nuclear. "
            "Estamos prestes a presenciar uma Supernova Tipo II!"
        )
        await _send_image(context.bot, chat_id, "assets/Supernova_TypeII.png")
        kb = [
            [InlineKeyboardButton("A) Aumentar massa lentamente", callback_data="ch4b_a")],
            [InlineKeyboardButton("B) Permitir colapso natural",  callback_data="ch4b_b")],
            [InlineKeyboardButton("C) Remover massa do n√∫cleo",   callback_data="ch4b_c")],
        ]
        await context.bot.send_message(
            chat_id, "Como proceder antes do colapso?",
            reply_markup=InlineKeyboardMarkup(kb)
        )
        _set_seq(context.user_data, "4B", "decision")

    # 4B.2 ‚Äì decis√£o
    elif seq == "decision":
        choice = update.callback_query.data
        await update.callback_query.answer()

        if choice == "ch4b_b":
            await update.callback_query.edit_message_text(
                "üí• BOOM! Choque reverso e processo r: ouro, ur√¢nio e platina nascem."
            )
            quiz_kb = [
                [InlineKeyboardButton("1) M√∫ltiplas capturas antes do Œ≤", callback_data="ch4b_q_ok")],
                [InlineKeyboardButton("2) Reduzir temperatura",             callback_data="ch4b_q_lowT")],
                [InlineKeyboardButton("3) Formar l√≠tio",                   callback_data="ch4b_q_li")],
            ]
            await context.bot.send_message(
                chat_id,
                "Mini-quiz: Por que a densidade de n√™utrons √© essencial no processo r?",
                reply_markup=InlineKeyboardMarkup(quiz_kb)
            )
            _set_seq(context.user_data, "4B", "quiz")
        else:
            msg = (
                "üî¥ Colapso falhou: neutrinos dissipam energia."
                if choice == "ch4b_a"
                else "üî¥ Sem massa cr√≠tica, sem supernova."
            )
            await update.callback_query.edit_message_text(msg)
            retry_kb = [
                [InlineKeyboardButton("A) Aumentar massa lentamente", callback_data="ch4b_a")],
                [InlineKeyboardButton("B) Permitir colapso natural",  callback_data="ch4b_b")],
                [InlineKeyboardButton("C) Remover massa do n√∫cleo",   callback_data="ch4b_c")],
            ]
            await context.bot.send_message(
                chat_id,
                "Tente novamente:",
                reply_markup=InlineKeyboardMarkup(retry_kb)
            )
            _set_seq(context.user_data, "4B", "decision")

    # 4B.3 ‚Äì quiz
    elif seq == "quiz":
        ans = update.callback_query.data
        await update.callback_query.answer()

        if ans == "ch4b_q_ok":
            await update.callback_query.edit_message_text(
                "‚úÖ Exato! M√∫ltiplas capturas r√°pidas sucedem o decaimento Œ≤. üå†"
            )
            # bot√£o Avan√ßar para Cap√≠tulo 5
            next_kb = [[
                InlineKeyboardButton("‚û°Ô∏è Avan√ßar para Cap√≠tulo 5", callback_data="go_ch5")
            ]]
            await context.bot.send_message(
                chat_id,
                "Pronto para o cap√≠tulo final?",
                reply_markup=InlineKeyboardMarkup(next_kb)
            )
            _set_seq(context.user_data, "4B", "await_ch5")
        else:
            await update.callback_query.edit_message_text(
                "‚ùå Pense na ordem captura ‚Üí decaimento."
            )
            quiz_kb = [
                [InlineKeyboardButton("1) M√∫ltiplas capturas antes do Œ≤", callback_data="ch4b_q_ok")],
                [InlineKeyboardButton("2) Reduzir temperatura",             callback_data="ch4b_q_lowT")],
                [InlineKeyboardButton("3) Formar l√≠tio",                   callback_data="ch4b_q_li")],
            ]
            await context.bot.send_message(
                chat_id,
                "Mini-quiz: Por que precisa alta densidade de n√™utrons?",
                reply_markup=InlineKeyboardMarkup(quiz_kb)
            )
            _set_seq(context.user_data, "4B", "quiz")

    # 4B.4 ‚Äì avan√ßar para Cap√≠tulo 5
    elif seq == "await_ch5" and update.callback_query.data == "go_ch5":
        await update.callback_query.answer()
        _set_seq(context.user_data, "4B", "done")
        context.user_data["seq5"] = "start"
        await chapter5(update, context)


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ ESCOLHA DE RAMO ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
async def choose_branch(update: Update, context: CallbackContext) -> None:
    chat_id = update.effective_chat.id
    kb = [
        [InlineKeyboardButton("‚≠ê Estrela tipo Solar (~1 M‚òâ)", callback_data="solar")],
        [InlineKeyboardButton("üåü Estrela Massiva (~10 M‚òâ)",  callback_data="massive")],
    ]
    await context.bot.send_message(
        chat_id,
        "Qual trajet√≥ria estelar deseja seguir?",
        reply_markup=InlineKeyboardMarkup(kb)
    )
    _set_seq(context.user_data, "branch", "choose")

async def branch_handler(update: Update, context: CallbackContext) -> None:
    branch = update.callback_query.data
    await update.callback_query.answer()
    context.user_data["branch"] = branch

    if branch == "solar":
        await update.callback_query.edit_message_text("Voc√™ escolheu estrela tipo solar. Vamos!")
        _set_seq(context.user_data, "4A", "start")
        await chapter4A(update, context)
    else:
        await update.callback_query.edit_message_text("Voc√™ escolheu estrela massiva. Avante!")
        _set_seq(context.user_data, "4B", "start")
        await chapter4B(update, context)
