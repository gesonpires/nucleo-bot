"""
chapter3.py

Este m√≥dulo implementa o cap√≠tulo 3 da narrativa (fase AGB, processo s lento):
‚Äì Estado 'start': introdu√ß√£o √† fase AGB e apresenta√ß√£o das op√ß√µes de inje√ß√£o de ¬π¬≥C.
‚Äì Estado 'decision': usu√°rio escolhe taxa de ¬π¬≥C; em caso de acerto, segue para quiz.
‚Äì Estado 'quiz': mini-quiz sobre ritmo captura vs decaimento Œ≤; em caso de acerto, oferece bot√£o Avan√ßar.
‚Äì Estado 'await_ch4': aguarda clique em 'go_ch4' e dispara a escolha de ramo (chapter4).
"""

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from persistence import with_state


from chapters.chapter4 import choose_branch  # dispara escolha de ramo para Cap√≠tulo 4

logger = logging.getLogger(__name__)

@with_state
async def chapter3(update: Update, context: CallbackContext) -> None:
    """
    Inicia ou continua o cap√≠tulo 3 (fase AGB, processo s):

    seq3 == 'start'     ‚Üí apresenta texto e teclado [A/B/C]
    seq3 == 'decision'  ‚Üí trata escolha, envia quiz em caso de acerto ou repete op√ß√µes
    seq3 == 'quiz'      ‚Üí trata resposta do quiz, envia bot√£o Avan√ßar em caso de acerto
    seq3 == 'await_ch4' ‚Üí aguarda clique em 'go_ch4' e dispara choose_branch()
    """
    chat_id = update.effective_chat.id
    seq     = context.user_data.get("seq3", "start")

    # 3.0 ‚Äî INTRODU√á√ÉO √Ä FASE AGB
    if seq == "start":
        try:
            await context.bot.send_message(
                chat_id,
                "Sua estrela entrou na fase AGB: n√∫cleo de carbono-oxig√™nio, "
                "cascas queimando h√©lio e hidrog√™nio."
            )
            await context.bot.send_message(
                chat_id,
                "Pulsos t√©rmicos liberam n√™utrons via ¬π¬≥C(Œ±,n)¬π‚Å∂O. "
                "Precisamos de taxa moderada para formar Sr ‚Üí Ba ‚Üí Pb sem ejetar o envelope."
            )
            kb = [
                [InlineKeyboardButton("A) Injetar muito ¬π¬≥C",       callback_data="ch3_a")],
                [InlineKeyboardButton("B) Controle moderado de ¬π¬≥C", callback_data="ch3_b")],
                [InlineKeyboardButton("C) Nenhum ¬π¬≥C",              callback_data="ch3_c")],
            ]
            await context.bot.send_message(
                chat_id,
                "Qual op√ß√£o escolher?",
                reply_markup=InlineKeyboardMarkup(kb)
            )
            context.user_data["seq3"] = "decision"

        except Exception:
            logger.error("Erro no cap√≠tulo 3 [start]", exc_info=True)
            try:
                await context.bot.send_message(
                    chat_id,
                    "‚ö†Ô∏è Ocorreu um problema ao iniciar o Cap√≠tulo 3. Tente novamente mais tarde."
                )
            except:
                logger.critical(
                    "Falha ao notificar usu√°rio sobre erro no cap√≠tulo 3 [start]",
                    exc_info=True
                )

    # 3.1 ‚Äî DECIS√ÉO DO USU√ÅRIO
    elif seq == "decision":
        try:
            choice = update.callback_query.data
            await update.callback_query.answer()

            if choice == "ch3_b":
                await update.callback_query.edit_message_text(
                    "üü¢ Taxa moderada! Sr ‚Üí Ba ‚Üí Pb se formam e a estrela exibe fortes linhas de b√°rio."
                )
                qkb = [
                    [InlineKeyboardButton("1) Captura mais lenta que Œ≤", callback_data="ch3_q_ok")],
                    [InlineKeyboardButton("2) Temperatura muito baixa",   callback_data="ch3_q_lowT")],
                    [InlineKeyboardButton("3) Dura bilh√µes de anos",      callback_data="ch3_q_time")],
                ]
                await context.bot.send_message(
                    chat_id,
                    "Mini-quiz: Por que o processo s √© chamado ‚Äòlento‚Äô?",
                    reply_markup=InlineKeyboardMarkup(qkb)
                )
                context.user_data["seq3"] = "quiz"

            else:
                msg = (
                    "üî¥ Excesso de n√™utrons: instabilidade e perda do envelope!"
                    if choice == "ch3_a"
                    else "üî¥ Sem ¬π¬≥C, nenhum n√™utron ‚Üí nenhum elemento pesado."
                )
                await update.callback_query.edit_message_text(msg)

                retry_kb = [
                    [InlineKeyboardButton("A) Injetar muito ¬π¬≥C",       callback_data="ch3_a")],
                    [InlineKeyboardButton("B) Controle moderado de ¬π¬≥C", callback_data="ch3_b")],
                    [InlineKeyboardButton("C) Nenhum ¬π¬≥C",              callback_data="ch3_c")],
                ]
                await context.bot.send_message(
                    chat_id,
                    "Tente outra vez:",
                    reply_markup=InlineKeyboardMarkup(retry_kb)
                )
                context.user_data["seq3"] = "decision"

        except Exception:
            logger.error("Erro no cap√≠tulo 3 [decision]", exc_info=True)
            try:
                await context.bot.send_message(
                    chat_id,
                    "‚ö†Ô∏è Erro ao processar sua escolha no Cap√≠tulo 3. Tente novamente."
                )
            except:
                logger.critical(
                    "Falha ao notificar usu√°rio sobre erro no cap√≠tulo 3 [decision]",
                    exc_info=True
                )

    # 3.2 ‚Äî QUIZ
    elif seq == "quiz":
        try:
            ans = update.callback_query.data
            await update.callback_query.answer()

            if ans == "ch3_q_ok":
                await update.callback_query.edit_message_text(
                    "‚úÖ Correto! Cada captura √© mais lenta que o decaimento Œ≤, "
                    "acompanhando a linha de estabilidade."
                )
                next_kb = [[
                    InlineKeyboardButton("‚û°Ô∏è Avan√ßar para Cap√≠tulo 4", callback_data="go_ch4")
                ]]
                await context.bot.send_message(
                    chat_id,
                    "Pronto para escolher o pr√≥ximo est√°gio da evolu√ß√£o estelar?",
                    reply_markup=InlineKeyboardMarkup(next_kb)
                )
                context.user_data["seq3"] = "await_ch4"

            else:
                await update.callback_query.edit_message_text(
                    "‚ùå Ainda n√£o. Pense no ritmo entre captura e decaimento."
                )
                quiz_kb = [
                    [InlineKeyboardButton("1) Captura mais lenta que Œ≤", callback_data="ch3_q_ok")],
                    [InlineKeyboardButton("2) Temperatura muito baixa",   callback_data="ch3_q_lowT")],
                    [InlineKeyboardButton("3) Dura bilh√µes de anos",      callback_data="ch3_q_time")],
                ]
                await context.bot.send_message(
                    chat_id,
                    "Escolha novamente:",
                    reply_markup=InlineKeyboardMarkup(quiz_kb)
                )
                context.user_data["seq3"] = "quiz"

        except Exception:
            logger.error("Erro no cap√≠tulo 3 [quiz]", exc_info=True)
            try:
                await context.bot.send_message(
                    chat_id,
                    "‚ö†Ô∏è Ocorreu um problema ao processar o quiz do Cap√≠tulo 3. Tente novamente."
                )
            except:
                logger.critical(
                    "Falha ao notificar usu√°rio sobre erro no cap√≠tulo 3 [quiz]",
                    exc_info=True
                )

    # 3.3 ‚Äî DISPARAR ESCOLHA DE RAMO PARA CAP√çTULO 4
    elif seq == "await_ch4" and update.callback_query.data == "go_ch4":
        try:
            await update.callback_query.answer()
            context.user_data["seq3"] = "done"
            await choose_branch(update, context)

        except Exception:
            logger.error("Erro no cap√≠tulo 3 [await_ch4]", exc_info=True)
            try:
                await context.bot.send_message(
                    chat_id,
                    "‚ö†Ô∏è N√£o foi poss√≠vel avan√ßar para o Cap√≠tulo 4. Tente novamente."
                )
            except:
                logger.critical(
                    "Falha ao notificar usu√°rio sobre erro no cap√≠tulo 3 [await_ch4]",
                    exc_info=True
                )
