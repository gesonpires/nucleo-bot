"""
chapter2.py

Este m√≥dulo implementa o cap√≠tulo 2 da narrativa (estrela solar, processo triplo-Œ±):
‚Äì Estado 'start': introdu√ß√£o ao triplo-Œ± e apresenta√ß√£o das op√ß√µes de estrat√©gia.
‚Äì Estado 'decision': usu√°rio escolhe A/B/C; em caso de acerto, avan√ßa para o quiz.
‚Äì Estado 'quiz': quiz sobre o n√∫cleo inst√°vel ‚Å∏Be; em caso de acerto, oferece bot√£o Avan√ßar.
‚Äì Estado 'await_ch3': aguarda clique em 'go_ch3' para iniciar o Cap√≠tulo 3.

callback_data usados: 
 ch2_a, ch2_b, ch2_c, 
 ch2_q_be8, ch2_q_c12, ch2_q_c10, 
 go_ch3
"""

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from persistence import with_state


from chapters.chapter3 import chapter3   # pr√≥ximo cap√≠tulo

logger = logging.getLogger(__name__)

@with_state
async def chapter2(update: Update, context: CallbackContext) -> None:
    """
    Inicia ou continua o cap√≠tulo 2 (triplo-Œ±).

    Fluxo:
    ------
    seq2 == 'start'      ‚Üí apresenta texto e teclado [A/B/C]
    seq2 == 'decision'   ‚Üí trata escolha, envia quiz em caso de acerto ou repete op√ß√µes
    seq2 == 'quiz'       ‚Üí trata resposta do quiz, envia bot√£o Avan√ßar em caso de acerto
    seq2 == 'await_ch3'  ‚Üí aguarda clique em 'go_ch3' e dispara chapter3()
    """
    chat_id = update.effective_chat.id
    seq     = context.user_data.get("seq2", "start")

    # 2.0 ‚Äî INTRODU√á√ÉO
    if seq == "start":
        try:
            await context.bot.send_message(
                chat_id,
                "Sua estrela esgotou hidrog√™nio no n√∫cleo, tornou-se gigante vermelha "
                "e o n√∫cleo de h√©lio atingiu ~100 MK.\n"
                "Precisamos iniciar o processo **triplo-Œ±** (¬≥√óHe ‚Üí ¬π¬≤C)."
            )
            kb = [
                [InlineKeyboardButton("A) Comprimir n√∫cleo MUITO r√°pido", callback_data="ch2_a")],
                [InlineKeyboardButton("B) Aumentar press√£o lentamente",    callback_data="ch2_b")],
                [InlineKeyboardButton("C) Resfriar o n√∫cleo antes",        callback_data="ch2_c")],
            ]
            await context.bot.send_message(
                chat_id,
                "Qual estrat√©gia escolher?",
                reply_markup=InlineKeyboardMarkup(kb)
            )
            context.user_data["seq2"] = "decision"

        except Exception:
            logger.error("Erro no cap√≠tulo 2 [start]", exc_info=True)
            try:
                await context.bot.send_message(
                    chat_id,
                    "‚ö†Ô∏è Houve um problema ao iniciar o Cap√≠tulo 2. Por favor, tente novamente mais tarde."
                )
            except:
                logger.critical(
                    "Falha ao notificar usu√°rio sobre erro no cap√≠tulo 2 [start]",
                    exc_info=True
                )

    # 2.1 ‚Äî DECIS√ÉO
    elif seq == "decision":
        try:
            choice = update.callback_query.data
            await update.callback_query.answer()

            if choice == "ch2_b":  # ‚úîÔ∏è resposta correta
                await update.callback_query.edit_message_text(
                    "üü¢ Press√£o moderada! ¬≥√óHe ‚Üí ¬π¬≤C e a estrela estabiliza."
                )
                quiz_kb = [
                    [InlineKeyboardButton("8Be",  callback_data="ch2_q_be8")],
                    [InlineKeyboardButton("12C",  callback_data="ch2_q_c12")],
                    [InlineKeyboardButton("10C",  callback_data="ch2_q_c10")],
                ]
                await context.bot.send_message(
                    chat_id,
                    "Quiz: Qual n√∫cleo inst√°vel serve de ponte no triplo-Œ±?",
                    reply_markup=InlineKeyboardMarkup(quiz_kb)
                )
                context.user_data["seq2"] = "quiz"

            else:  # ‚ùå respostas A ou C
                msg = (
                    "üî¥ Flash de h√©lio! Explos√£o descontrolada."
                    if choice == "ch2_a"
                    else "üî¥ N√∫cleo esfriou; fus√£o n√£o inicia."
                )
                await update.callback_query.edit_message_text(msg)

                retry_kb = [
                    [InlineKeyboardButton("A) Comprimir n√∫cleo MUITO r√°pido", callback_data="ch2_a")],
                    [InlineKeyboardButton("B) Aumentar press√£o lentamente",    callback_data="ch2_b")],
                    [InlineKeyboardButton("C) Resfriar o n√∫cleo antes",        callback_data="ch2_c")],
                ]
                await context.bot.send_message(
                    chat_id,
                    "Tente outra estrat√©gia:",
                    reply_markup=InlineKeyboardMarkup(retry_kb)
                )
                context.user_data["seq2"] = "decision"

        except Exception:
            logger.error("Erro no cap√≠tulo 2 [decision]", exc_info=True)
            try:
                await context.bot.send_message(
                    chat_id,
                    "‚ö†Ô∏è Ocorreu um problema ao processar sua escolha no Cap√≠tulo 2."
                )
            except:
                logger.critical(
                    "Falha ao notificar usu√°rio sobre erro no cap√≠tulo 2 [decision]",
                    exc_info=True
                )

    # 2.2 ‚Äî QUIZ
    elif seq == "quiz":
        try:
            ans = update.callback_query.data
            await update.callback_query.answer()

            if ans == "ch2_q_be8":  # ‚úîÔ∏è quiz correto
                await update.callback_query.edit_message_text(
                    "‚úÖ Correto! ‚Å∏Be vive 10‚Åª¬π‚Å∂ s ‚Äî tempo suficiente para capturar outro He e virar ¬π¬≤C."
                )
                next_kb = [[
                    InlineKeyboardButton("‚û°Ô∏è Avan√ßar para Cap√≠tulo 3", callback_data="go_ch3")
                ]]
                await context.bot.send_message(
                    chat_id,
                    "Pronto para descobrir como se formam b√°rio e chumbo na fase AGB?",
                    reply_markup=InlineKeyboardMarkup(next_kb)
                )
                context.user_data["seq2"] = "await_ch3"

            else:  # ‚ùå quiz errado
                await update.callback_query.edit_message_text(
                    "‚ùå Ainda n√£o. Lembre da ponte inst√°vel entre dois Œ±."
                )
                quiz_kb = [
                    [InlineKeyboardButton("8Be",  callback_data="ch2_q_be8")],
                    [InlineKeyboardButton("12C",  callback_data="ch2_q_c12")],
                    [InlineKeyboardButton("10C",  callback_data="ch2_q_c10")],
                ]
                await context.bot.send_message(
                    chat_id,
                    "Quiz: Qual n√∫cleo inst√°vel serve de ponte no triplo-Œ±?",
                    reply_markup=InlineKeyboardMarkup(quiz_kb)
                )
                context.user_data["seq2"] = "quiz"

        except Exception:
            logger.error("Erro no cap√≠tulo 2 [quiz]", exc_info=True)
            try:
                await context.bot.send_message(
                    chat_id,
                    "‚ö†Ô∏è Ocorreu um problema ao processar o quiz do Cap√≠tulo 2."
                )
            except:
                logger.critical(
                    "Falha ao notificar usu√°rio sobre erro no cap√≠tulo 2 [quiz]",
                    exc_info=True
                )

    # 2.3 ‚Äî AVAN√áAR PARA CAP√çTULO 3
    elif seq == "await_ch3" and update.callback_query.data == "go_ch3":
        try:
            await update.callback_query.answer()
            context.user_data["seq2"] = "done"
            context.user_data["seq3"] = "start"
            await chapter3(update, context)

        except Exception:
            logger.error("Erro no cap√≠tulo 2 [await_ch3]", exc_info=True)
            try:
                await context.bot.send_message(
                    chat_id,
                    "‚ö†Ô∏è N√£o foi poss√≠vel avan√ßar para o Cap√≠tulo 3. Tente novamente."
                )
            except:
                logger.critical(
                    "Falha ao notificar usu√°rio sobre erro no cap√≠tulo 2 [await_ch3]",
                    exc_info=True
                )
