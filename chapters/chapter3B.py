"""
chapter3B.py

Ramo alternativo do Cap√≠tulo 3 (fase AGB ‚Äì ciclo CNO alternativo):
‚Äì Estado 'start': apresenta enredo e op√ß√µes de estrat√©gia.
‚Äì Estado 'decision': trata escolha; em caso de acerto, oferece bot√£o Avan√ßar para Cap√≠tulo 4.
‚Äì Estado 'await_ch4': aguarda clique em 'go_ch4' e dispara escolha de ramo.
"""

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from persistence import with_state

from chapters.chapter4 import choose_branch  # para avan√ßar ao cap√≠tulo 4

logger = logging.getLogger(__name__)
@with_state
async def chapter3B(update: Update, context: CallbackContext) -> None:
    """
    Inicia ou continua o cap√≠tulo 3B (ramo massivo alternativo).

    Fluxo:
    ------
    seq3B == 'start'      ‚Üí apresenta texto e teclado [ch3b_a,ch3b_b]
    seq3B == 'decision'   ‚Üí trata escolha:
        ‚Ä¢ 'ch3b_a' ‚Üí sucesso, envia bot√£o Avan√ßar para Cap.4
        ‚Ä¢ 'ch3b_b' ‚Üí falha, reinicia cap√≠tulo
    seq3B == 'await_ch4'  ‚Üí aguarda callback_data 'go_ch4' e chama choose_branch()
    """
    chat_id = update.effective_chat.id
    seq     = context.user_data.get("seq3B", "start")

    # 3B.1 ‚Äî INTRODU√á√ÉO
    if seq == "start":
        try:
            await context.bot.send_message(
                chat_id,
                "üåå Cap√≠tulo 3B: Voc√™ optou por resfriar a estrela antes de formar oxig√™nio."
            )
            kb = [
                [InlineKeyboardButton("A) Tentar queimar carbono",          callback_data="ch3b_a")],
                [InlineKeyboardButton("B) Elevar temperatura antes demais", callback_data="ch3b_b")],
            ]
            await context.bot.send_message(
                chat_id,
                "Qual estrat√©gia agora?",
                reply_markup=InlineKeyboardMarkup(kb)
            )
            context.user_data["seq3B"] = "decision"

        except Exception:
            logger.error("Erro no cap√≠tulo 3B [start]", exc_info=True)
            try:
                await context.bot.send_message(
                    chat_id,
                    "‚ö†Ô∏è Erro ao iniciar o Cap√≠tulo 3B. Tente novamente mais tarde."
                )
            except:
                logger.critical(
                    "Falha ao notificar usu√°rio sobre erro no cap√≠tulo 3B [start]",
                    exc_info=True
                )

    # 3B.2 ‚Äî DECIS√ÉO
    elif seq == "decision":
        try:
            choice = update.callback_query.data
            await update.callback_query.answer()

            if choice == "ch3b_a":
                await update.callback_query.edit_message_text(
                    "‚úÖ Combust√£o de carbono iniciada! N√∫cleo alcan√ßa 600 MK, formando ¬π‚Å∂O."
                )
                # bot√£o Avan√ßar para Cap√≠tulo 4
                next_kb = [[
                    InlineKeyboardButton("‚û°Ô∏è Avan√ßar para Cap√≠tulo 4", callback_data="go_ch4")
                ]]
                await context.bot.send_message(
                    chat_id,
                    "Pronto para escolher o pr√≥ximo est√°gio da evolu√ß√£o estelar?",
                    reply_markup=InlineKeyboardMarkup(next_kb)
                )
                context.user_data["seq3B"] = "await_ch4"

            else:  # ch3b_b
                await update.callback_query.edit_message_text(
                    "üî¥ Temperatura subiu r√°pido demais; a estrela expulsa o envelope."
                )
                # reinicia o cap√≠tulo para nova tentativa
                context.user_data["seq3B"] = "start"

        except Exception:
            logger.error("Erro no cap√≠tulo 3B [decision]", exc_info=True)
            try:
                await context.bot.send_message(
                    chat_id,
                    "‚ö†Ô∏è Erro ao processar sua escolha no Cap√≠tulo 3B. Tente novamente."
                )
            except:
                logger.critical(
                    "Falha ao notificar usu√°rio sobre erro no cap√≠tulo 3B [decision]",
                    exc_info=True
                )

    # 3B.3 ‚Äî AVAN√áAR PARA ESCOLHA DE RAMO
    elif seq == "await_ch4" and update.callback_query.data == "go_ch4":
        try:
            await update.callback_query.answer()
            context.user_data["seq3B"] = "done"
            await choose_branch(update, context)

        except Exception:
            logger.error("Erro no cap√≠tulo 3B [await_ch4]", exc_info=True)
            try:
                await context.bot.send_message(
                    chat_id,
                    "‚ö†Ô∏è N√£o foi poss√≠vel avan√ßar para o Cap√≠tulo 4. Tente novamente."
                )
            except:
                logger.critical(
                    "Falha ao notificar usu√°rio sobre erro no cap√≠tulo 3B [await_ch4]",
                    exc_info=True
                )
